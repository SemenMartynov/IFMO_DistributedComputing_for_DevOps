#запуск с запросом на рута 
#ansible-playbook -i inventory.ini ans.yml --ask-become-pass


#установка ansible на ubuntu

#sudo apt install ansible-core
#Разварачивать буду mysql прописываем хосты, и переменные для бд и общее название сети для докера.

# https://habr.com/ru/articles/532216/
#https://docs.ansible.com/ansible/latest/collections/community/mysql/mysql_variables_module.html#ansible-collections-community-mysql-mysql-variables-module
#https://dev.mysql.com/doc/refman/8.4/en/replication-gtids-howto.html
---
- name: Развертывание WordPress с Docker
  hosts: all
  become: yes
  vars:
    mysql_root_password: "my_root_password"
    mysql_database: "wordpress_db"
    mysql_user: "wp_user"
    mysql_password: "wp_password"
    docker_network: "wp_network"
    cluster_network: "ms_network"


  tasks:
   - name: Clone a repo with separate git directory
     ansible.builtin.git:
      repo: "https://github.com/pashkami/Tazetdinov-Pavel_IFMO_DistributedComputing_for_DevOps"
      dest: /home/server/tmp
      single_branch: yes
      version: "add-cluster"

   - name: Обновить apt-кеш, установка Docker и Python и модуля Docker
     apt:
       name:
         - docker.io
         - python3-pip
         - python3-docker
       state: present
       update_cache: yes

   - name: запускаю сервис Docker
     service:
       name: docker
       state: started
       enabled: true

   - name: Создаю Docker-сеть для WP и БД
     docker_network:
       name: "{{ docker_network }}"
       state: present

   - name: Создаю Docker-сеть для кластера (мастер-слейв)#Создаю сеть для связи мастера и слейва
     docker_network:
       name: "{{ cluster_network }}"
       state: present


   - name: запускаю контейнер базы данных MySQL -master
     docker_container:
       name: wp_db_master
       image: mysql:5.7
       state: started
       restart_policy: always
       env:
         MYSQL_ROOT_PASSWORD: "{{ mysql_root_password }}"
         MYSQL_DATABASE: "{{ mysql_database }}"
         MYSQL_USER: "{{ mysql_user }}"
         MYSQL_PASSWORD: "{{ mysql_password }}"
         MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
       volumes:
         - "/home/server/tmp/sql_confs/master.cnf:/etc/mysql/conf.d/master.cnf:ro"
         - "/home/server/tmp/sql_confs/user_init_master.sql:/docker-entrypoint-initdb.d/user_init_master.sql:ro" #Создание пользователя для реплики 
       networks:
         - name: "{{ docker_network }}"
         - name: "{{ cluster_network }}"
        published_ports:
          - "3307:3306"



   - name: запускаю контейнер базы данных MySQL - slave
     docker_container:
       name: wp_db_slave
       image: mysql:5.7
       state: started
       restart_policy: always
       env:
         MYSQL_ROOT_PASSWORD: "{{ mysql_root_password }}"
         MYSQL_DATABASE: "{{ mysql_database }}"
         MYSQL_USER: "{{ mysql_user }}"
         MYSQL_PASSWORD: "{{ mysql_password }}"
         MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
       volumes:
         - "/home/server/tmp/sql_confs/slave.cnf:/etc/mysql/conf.d/slave.cnf:ro"
         - "/home/server/tmp/sql_confs/slave_user_init.sql:/docker-entrypoint-initdb.d/slave_user_init.sql:ro" запуск slave
       networks:
         - name: "{{ cluster_network }}"
        published_ports:
          - "3308:3306"

   - name: запускаю контейнер WordPress
     docker_container:
       name: wordpress
       image: wordpress:latest
       state: started
       restart_policy: always
       published_ports:
         - "80:80"
       env:
         WORDPRESS_DB_HOST: "wp_db_master:3307"
         WORDPRESS_DB_USER: "{{ mysql_user }}"
         WORDPRESS_DB_PASSWORD: "{{ mysql_password }}"
         WORDPRESS_DB_NAME: "{{ mysql_database }}"
       networks:
         - name: "{{ docker_network }}"
