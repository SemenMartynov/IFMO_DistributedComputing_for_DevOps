---
- name: Home work 3
  hosts: carrier
  become: true
  vars_files:
    - defaults/main.yml
  tasks:
    - name: Display Configuration Variables
      ansible.builtin.debug:
        msg:
          - "monitoring_url: {{ monitoring_url }}" # monitoring url including port

    - name: Create Prometheus MySQL export container
      community.docker.docker_container:
        name: 'prometheus'
        image: 'quay.io/prometheus/node-exporter'
        state: started
        restart: true
        restart_policy: on-failure
        networks:
          - name: '{{ wp_int_network }}'
            ipv4_address: 10.16.1.5
        exposed_ports:
          - 9090
        volumes:
          - prometheus.yml:/etc/prometheus/prometheus.yml
          - 'prometheus-data:/prometheus'
        env:
          WORDPRESS_DB_HOST: '{{ db_container_name }}'
          WORDPRESS_DB_USER: '{{ wp_dbuser }}'
          WORDPRESS_DB_PASSWORD: '{{ mysql_passwd }}'
          WORDPRESS_DB_NAME: '{{ wp_dbname }}'

    - name: Create Prometheus container
      community.docker.docker_container:
        name: 'prometheus'
        image: 'prom/prometheus'
        state: started
        restart: true
        restart_policy: on-failure
        networks:
          - name: '{{ wp_int_network }}'
            ipv4_address: 10.16.1.6
        exposed_ports:
          - 9090
        volumes:
          - prometheus.yml:/etc/prometheus/prometheus.yml
          - 'prometheus-data:/prometheus'
        env:
          WORDPRESS_DB_HOST: '{{ db_container_name }}'
          WORDPRESS_DB_USER: '{{ wp_dbuser }}'
          WORDPRESS_DB_PASSWORD: '{{ mysql_passwd }}'
          WORDPRESS_DB_NAME: '{{ wp_dbname }}'

    
    - name: Create Graphana container
      community.docker.docker_container:
        name: 'grafana'
        image: 'grafana/grafana'
        state: started
        restart: true
        restart_policy: on-failure
        networks:
          - name: '{{ wp_ext_network }}'
        ports:
          - 3000:3000
        volumes:
          - 'grafana-storage:/var/lib/grafana'
        env:
          GF_SERVER_ROOT_URL: '{{ monitoring_url }}'
          GF_PLUGINS_PREINSTALL: 'grafana-clock-panel'
