---
- hosts: all
  become: true
  vars_files:
    - defaults/main.yml

  tasks:
    - name: Generate MySQL password
      ansible.builtin.set_fact: mysql_passwd="{{ pwd_alias }}"

    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true
        
    - name: Install required by Ansible package
      apt: pkg={{ item }} state=present
      with_items:
        - python3-pymysql
        
    - name: Create MySQL container for SLAVE
      community.docker.docker_container:
        name: "{{ db_container_name }}slave"
        image: "{{ db_container_image }}"
        command: --server-id=2 --gtid-mode=ON --enforce-gtid-consistency=ON --plugin-load-add='clone=mysql_clone.so'
        state: started
        restart: yes
        restart_policy: always
        networks:
          - name: "{{ wp_int_network }}"
            ipv4_address: "10.16.1.4"
        exposed_ports:
          - 3306
          - 33060
        volumes:
          - db2:/var/lib/mysql
        env:
          MYSQL_ROOT_PASSWORD: "{{ mysql_root_pw }}"
          MYSQL_ROOT_HOST: '%'
#          MYSQL_RANDOM_ROOT_PASSWORD: '1'
#          MYSQL_DATABASE: "{{ wp_dbname }}"
#          MYSQL_USER: "{{ wp_dbuser }}"
#          MYSQL_PASSWORD: "{{ mysql_passwd }}"

    - name: Pause for 15s to start SLAVE
      ansible.builtin.pause:
        seconds: 15

#    - name: Prepare SLAVE for replication
#      community.mysql.mysql_query:
#        login_db: mysql
#        login_host: "10.16.1.4"
#        login_port: 3306
#        login_password: "{{ mysql_root_pw }}"
#        query:
#          - INSTALL PLUGIN clone SONAME 'mysql_clone.so'

    - name: Create replication user on SLAVE
      community.mysql.mysql_user:
        login_host: "10.16.1.4"
        login_port: 3306
        login_password: "{{ mysql_root_pw }}"      
        name: replica_user
        host_all: true
        password: "{{ mysql_root_pw }}"
        priv: '*.*:BACKUP_ADMIN, CLONE_ADMIN, REPLICATION SLAVE'
        state: present

#    - name: Restart MySQL SLAVE container
#      community.docker.docker_container:
#        name: "{{ db_container_name }}slave"
#        state: started
#        restart: true
        
    - name: Stop WP container
      community.docker.docker_container:
        name: "{{ wp_container_name }}"
        state: stopped

    - name: Backup current WP databases
      mysql_db:
        state: dump
        name: all
        target: /tmp/dump.sql
        login_host: "10.16.1.3"
        login_port: 3306
        login_password: "{{ mysql_root_pw }}"

    - name: Install CLONE plugin on MASTER
      community.mysql.mysql_query:
        login_db: mysql
        login_host: "10.16.1.3"
        login_port: 3306
        login_password: "{{ mysql_root_pw }}"
        query:
          - SET PERSIST_ONLY server_id = 1
          - SET PERSIST_ONLY enforce_gtid_consistency = ON
          - SET PERSIST_ONLY gtid_mode = ON
          - INSTALL PLUGIN clone SONAME 'mysql_clone.so'
          
    - name: Create replication user on MASTER
      community.mysql.mysql_user:
        login_host: "10.16.1.3"
        login_port: 3306
        login_password: "{{ mysql_root_pw }}"      
        name: replica_user
        host_all: true
        password: "{{ mysql_root_pw }}"
        priv: '*.*:BACKUP_ADMIN, CLONE_ADMIN, REPLICATION SLAVE'
        state: present
      
    - name: Restart MySQL MASTER container
      community.docker.docker_container:
        name: "{{ db_container_name }}"
        state: started
        restart: true

    - name: Pause for 15s to start MASTER
      ansible.builtin.pause:
        seconds: 15
        
    - name: Cloning DB from MASTER to SLAVE
      ignore_errors: true # mysql will restart after after clone completed
      community.mysql.mysql_query:
        login_db: mysql
        login_host: "10.16.1.4"
        login_port: 3306
        login_password: "{{ mysql_root_pw }}"
        query:
          - SET GLOBAL clone_valid_donor_list = '{{ db_container_name }}:3306'
          - CLONE INSTANCE FROM 'replica_user'@'{{ db_container_name }}':3306 IDENTIFIED BY '{{ mysql_root_pw }}'

    - name: Pause for 15s to wait SLAVE restarting after CLONE
      ansible.builtin.pause:
        seconds: 15
        
    - name: Start replication on SLAVE
      community.mysql.mysql_query:
        login_db: mysql
        login_host: "10.16.1.4"
        login_port: 3306
        login_password: "{{ mysql_root_pw }}"
        query:
          - CHANGE REPLICATION SOURCE TO SOURCE_HOST='{{ db_container_name }}', SOURCE_PORT=3306, SOURCE_USER='replica_user', SOURCE_PASSWORD = '{{ mysql_root_pw }}', SOURCE_AUTO_POSITION = 1 FOR CHANNEL 'db1s'
          - START REPLICA FOR CHANNEL 'db1s'

    - name: Start WP container
      community.docker.docker_container:
        name: "{{ wp_container_name }}"
        state: started
