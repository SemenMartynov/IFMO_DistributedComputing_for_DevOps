---
- name: WordPress и MySQL Master-Slave кластер
  hosts: all
  gather_facts: yes
  become: yes
  vars:
    mysql_root_password: "root1234"
    mysql_repl_user: "repl_user"
    mysql_repl_password: "repl_password"
    mysql_database: "wordpress_database"
    mysql_user: "wordpress_user"
    mysql_password: "wordpress_password"
    mysql_config_dir: "/opt/mysql_cluster"

  tasks:
    - name: Установка необходимых пакетов
      apt:
        name:
          - docker.io
          - python3-pip
          - python3-docker
        state: present
        update_cache: yes

    - name: Запуск Docker
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Создание директории для конфигов
      file:
        path: "{{ mysql_config_dir }}"
        state: directory
        mode: 0755

    - name: Создание конфига для Master
      template:
        src: my-master.cnf.j2
        dest: "{{ mysql_config_dir }}/my-master.cnf"
        mode: 0644

    - name: Создание конфига для Slave
      template:
        src: my-slave.cnf.j2
        dest: "{{ mysql_config_dir }}/my-slave.cnf"
        mode: 0644

    - name: Создание сети для контейнеров
      community.docker.docker_network:
        name: wp_network
        driver: bridge

    # MySQL Master
    - name: Запуск MySQL Master
      community.docker.docker_container:
        name: mysql_master
        image: mysql:5.7
        networks:
          - name: wp_network
        restart_policy: always
        env:
          MYSQL_ROOT_PASSWORD: "{{ mysql_root_password }}"
          MYSQL_DATABASE: "{{ mysql_database }}"
          MYSQL_USER: "{{ mysql_user }}"
          MYSQL_PASSWORD: "{{ mysql_password }}"
          MYSQL_REPLICATION_USER: "{{ mysql_repl_user }}"
          MYSQL_REPLICATION_PASSWORD: "{{ mysql_repl_password }}"
        volumes:
          - mysql_master_data:/var/lib/mysql
          - "{{ mysql_config_dir }}/my-master.cnf:/etc/mysql/conf.d/replication.cnf"
        ports:
          - "3306:3306"

    - name: Ожидание готовности Master
      wait_for:
        host: "{{ ansible_host }}"
        port: 3306
        timeout: 60

    # MySQL Slave
    - name: Запуск MySQL Slave
      community.docker.docker_container:
        name: mysql_slave
        image: mysql:5.7
        networks:
          - name: wp_network
        restart_policy: always
        env:
          MYSQL_ROOT_PASSWORD: "{{ mysql_root_password }}"
        volumes:
          - mysql_slave_data:/var/lib/mysql
          - "{{ mysql_config_dir }}/my-slave.cnf:/etc/mysql/conf.d/replication.cnf"
        ports:
          - "3307:3306"

    - name: Ожидание готовности Slave
      wait_for:
        host: "{{ ansible_host }}"
        port: 3307
        timeout: 60

    - name: Настройка репликации на Slave
      community.mysql.mysql_replication:
        mode: changemaster
        master_host: "mysql_master"
        master_user: "{{ mysql_repl_user }}"
        master_password: "{{ mysql_repl_password }}"
        master_auto_position: 1
        login_user: root
        login_password: "{{ mysql_root_password }}"
        login_host: "{{ ansible_host }}"
        login_port: 3307

    - name: Запуск репликации
      community.mysql.mysql_replication:
        mode: startslave
        login_user: root
        login_password: "{{ mysql_root_password }}"
        login_host: "{{ ansible_host }}"
        login_port: 3307

    - name: Проверка статуса репликации
      community.mysql.mysql_replication:
        mode: getslave
        login_user: root
        login_password: "{{ mysql_root_password }}"
        login_host: "{{ ansible_host }}"
        login_port: 3307
      register: replication_status
      until:
        - replication_status.Slave_IO_Running == "Yes"
        - replication_status.Slave_SQL_Running == "Yes"
      retries: 10
      delay: 5

    # WordPress
    - name: Запуск WordPress
      community.docker.docker_container:
        name: wordpress
        image: wordpress:latest
        networks:
          - name: wp_network
        restart_policy: always
        published_ports:
          - "80:80"
        env:
          WORDPRESS_DB_HOST: "mysql_master:3306"
          WORDPRESS_DB_NAME: "{{ mysql_database }}"
          WORDPRESS_DB_USER: "{{ mysql_user }}"
          WORDPRESS_DB_PASSWORD: "{{ mysql_password }}"

    - name: Проверка работы WordPress
      uri:
        url: "http://{{ ansible_host }}:80"
        status_code: 200
      register: wordpress_status
      until: wordpress_status.status == 200
      retries: 10
      delay: 5
