---
- name: Install docker
  hosts: monitoring
  become: true
  roles:
    - docker
  vars:
    docker_users: [ "{{ ansible_ssh_user }}" ]

# Генерируем сертификаты на хосте с prometheus
- name: Set up SSL for prometheus
  hosts: monitoring
  roles:
    - exporter-common
  tags:
    - singlehost

- name: Install prometheus
  hosts: monitoring
  roles:
    - prometheus
  vars:
    bot_token: "{{ lookup('ansible.builtin.env', 'TELEGRAM_BOT_TOKEN') }}"
    chat_id: "{{ lookup('ansible.builtin.env', 'TELEGRAM_CHAT_ID') }}"
  tags:
    - singlehost

# Сохраняем сертификаты и настройки prometheus
- hosts: monitoring
  tasks:
    - name: Fetch prometheus certificates and settings
      ansible.builtin.fetch:
        src: "{{ monitoring_dir }}/common/{{ item }}"
        dest: "{{ playbook_dir }}/tmp/{{ item }}"
        flat: true
      loop:
        - "exporter.crt"
        - "exporter.key"
        - "config.yml"

# Копируем их на хост с экспортерами
- hosts: blog
  tasks:
    - name: Create directories
      ansible.builtin.file:
        path: "{{ monitoring_dir }}/common"
        state: directory
        owner: "{{ ansible_ssh_user }}"
        group: "{{ ansible_ssh_user }}"
        mode: '0755'
    - name: Copy prometheus certificates and settings to remote hosts
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/tmp/{{ item }}"
        dest: "{{ monitoring_dir }}/common/{{ item }}"
        owner: "{{ ansible_ssh_user }}"
        group: "{{ ansible_ssh_user }}"
        mode: '0644'
      loop:
        - "exporter.crt"
        - "exporter.key"
        - "config.yml"
    - name: Remove tmp directory
      file: 
        path: "{{ playbook_dir }}/tmp" 
        state: absent
      delegate_to: localhost

- name: Install exporters
  hosts: blog
  become: true
  roles:
    - mysql-exporter
    - node-exporter
  tags:
    - singlehost