- name: "Docker installation"
  hosts: [node1-postgresql, node2-postgresql, node3-monitoring]
  become: true
  serial: 1  # Запускать задачи по очереди на каждом хосте
  roles:
    - docker_install

- name: Allow access from exporter to node 1
  hosts: node1-postgresql
  become: true
  vars_files:
    - roles/append_pg_hba/vars/main.yaml
  roles:
    - role: append_pg_hba
      vars:
        append_pg_hba_allow_network: "{{ append_pg_hba_node1_exporter.allow_network }}"
        append_pg_hba_entry: "{{ append_pg_hba_node1_exporter.entry }}"

- name: "Create postgres_exporter user"
  hosts: node1-postgresql # Создаем только на primary узле
  become: true
  roles:
    - create_postgres_exporter

- name: "Create node1 postgres_exporter container"
  hosts: node1-postgresql
  become: true
  vars:
    monitoring_net_subnet: "10.100.0.0/24"
    postgres_exporter_ip: "10.100.0.100"
    postgres_host: "192.168.56.20"
    postgres_port: "5432"
    postgres_db: "postgres"
    postgres_user: "postgres_exporter"
    postgres_password: "postgres_exporter"
  roles:
    - create_postgres_exporter_container

- name: "Create node2 postgres_exporter container"
  hosts: node2-postgresql
  become: true
  vars:
    monitoring_net_subnet: "10.100.0.0/24"
    postgres_exporter_ip: "10.100.0.100"
    postgres_host: "192.168.56.30"
    postgres_port: "5432"
    postgres_db: "postgres"
    postgres_user: "postgres_exporter"
    postgres_password: "postgres_exporter"
  roles:
    - create_postgres_exporter_container

- name: "Create prometheus container for node1-postgresql"
  hosts: node3-monitoring
  become: true
  roles:
    - setup_prometheus

- name: "Create grafana container for node1-postgresql"
  hosts: node3-monitoring
  become: true
  roles:
    - setup_grafana
