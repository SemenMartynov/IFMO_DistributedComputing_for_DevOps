---
- name: Run application
  hosts: app
  become: yes
  gather_facts: yes
  vars:
    application_path: "/var/www"

  tasks:
    - name: Create Docker Compose directory
      file:
        path: "{{ application_path }}"
        state: directory
        mode: '0755'

    - name: Copy docker-compose
      copy:
        src: ./files/docker-compose.production.yml
        dest: "{{ application_path }}/docker-compose.yml"
        mode: "0644"

    - name: Copy env
      copy:
        src: ./files/.env
        dest: "{{ application_path }}/.env"
        mode: "0644"

    - name: Up containers
      community.docker.docker_compose:
        project_src: {{ application_path }}
        project_files: docker-compose.production.yml
        build: no
        detached: yes
      shell: "docker compose up -d"
    
    - name: Configure pg_hba.conf
      community.docker.docker_container_exec:
        container: backend
        command: "echo \"host replication repl_user 0.0.0.0/0 md5\" >> /var/lib/postgresql/data/pg_hba.conf"
        detach: false
      register: exec_output

    - name: Configure postgresql.conf
      community.docker.docker_container_exec:
        container: backend
        command: "echo -e \"wal_level = replica\"\n\"max_wal_senders = 10\"\n\"wal_keep_size = 1GB\" >> /var/lib/postgresql/data/postgresql.conf"
        detach: false
      register: exec_output

    - name: Create role for replication
      community.postgresql.postgresql_query:
        db: "kittygram"
        login_host: "localhost"
        login_user: "postgres"
        login_password: "secret"
        query: "CREATE ROLE repl_user WITH REPLICATION LOGIN PASSWORD 'secret';"

    - name: Make migration
      community.docker.docker_container_exec:
        container: backend
        command: "python3 manage.py migrate"
        detach: false
      register: exec_output
