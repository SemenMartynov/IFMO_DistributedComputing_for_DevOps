---
- name: Создание контейнера для слейва
  community.docker.docker_container:
    name: "{{ slave_mysql_container_name }}"
    image: "{{ mysql_image }}"
    env:
      MYSQL_ROOT_PASSWORD: "{{ vault_mysql_root_password }}"
      MYSQL_DATABASE: "{{ vault_mysql_database }}"
      MYSQL_USER: "{{ vault_mysql_user }}"
      MYSQL_PASSWORD: "{{ vault_mysql_password }}"
      MYSQL_SERVER_ID: "2"
      MYSQL_LOG_BIN: mysql-bin
      MYSQL_BINLOG_FORMAT: ROW
    ports:
      - "3306:3306"
    volumes:
      - /opt/mysql/data:/var/lib/mysql
    restart_policy: always
    state: started

- name: Ожидание готовности MySQL
  ansible.builtin.wait_for:
    host: localhost
    port: 3306
    delay: 10
    timeout: 300

- name: Проверка статуса репликации на слейве
  community.mysql.mysql_replication:
    login_host: localhost
    login_port: 3306
    login_user: "{{ vault_mysql_user }}"
    login_password: "{{ vault_mysql_password }}"
    mode: getreplica
  register: slave_status

- name: Настройка слейва
  community.mysql.mysql_replication:
    primary_host: "{{ hostvars['mysql-master']['ansible_host'] }}"
    primary_port: 3306
    primary_user: {{ vault_mysql_replication_user }}
    primary_password: {{ vault_mysql_replication_password }}
    primary_log_file: "{{ hostvars['mysql-master']['binlog_info_for_slave'].file }}"
    primary_log_pos: "{{ hostvars['mysql-master']['binlog_info_for_slave'].position }}"
    mode: changeprimary
  when: slave_status is not defined


- name: Запуск репликации
  community.mysql.mysql_replication:
    mode: startreplica
  when: slave_status.replica_state != 'running'
