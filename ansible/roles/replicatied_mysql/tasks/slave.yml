---
- name: Создание контейнера для слейва
  community.docker.docker_container:
    name: "{{ slave_mysql_container_name }}"
    image: "{{ mysql_image }}"
    command: --server-id=2 --log-bin=mysql-bin --binlog-format=row
    restart_policy: always

    env:
      MYSQL_ROOT_PASSWORD: "{{ vault_mysql_root_password }}"
      MYSQL_DATABASE: "{{ vault_mysql_database }}"
      MYSQL_USER: "{{ vault_mysql_user }}"
      MYSQL_PASSWORD: "{{ vault_mysql_password }}"
    ports:
      - "3306:3306"
    state: started
    volumes:
      - /opt/mysql/data:/var/lib/mysql

- name: Получение информации о бинарных логах с мастера
  community.docker.docker_container_exec:
    container: "{{ master_mysql_container_name }}"
    command: >
      mysql -u root -p{{ vault_mysql_root_password }} -e "SHOW MASTER STATUS\G"
  register: master_status
  delegate_to: mysql-master

- name: Извлечение имени файла и позиции бинарного лога
  ansible.builtin.set_fact:
    master_log_file: "{{ master_status.stdout | regex_search('File:\\s+(\\S+)', '\\1') | first }}"
    master_log_pos: "{{ master_status.stdout | regex_search('Position:\\s+(\\d+)', '\\1') | first }}"
  when: master_status.rc == 0

- name: Проверка статуса репликации на слейве
  community.docker.docker_container_exec:
    container: "{{ slave_mysql_container_name }}"
    command: mysql -u root -p{{ vault_mysql_root_password }} -e "SHOW SLAVE STATUS\G"
  register: slave_status
  retries: 5
  delay: 5

- name: Настройка слейва
  community.docker.docker_container_exec:
    container: "{{ slave_mysql_container_name }}"
    command: |
      mysql -u root -p{{ vault_mysql_root_password }} -e "
      STOP SLAVE;
      CHANGE MASTER TO
        MASTER_HOST='{{ hostvars['mysql-master']['ansible_host'] }}',
        MASTER_USER='{{ vault_mysql_replication_user }}',
        MASTER_PASSWORD='{{ vault_mysql_replication_password }}',
        MASTER_LOG_FILE='{{ master_log_file }}',
        MASTER_LOG_POS={{ master_log_pos }};
      START SLAVE;"

- name: Проверка наличия дампа на мастере
  ansible.builtin.stat:
    path: /tmp/mysql_dumps/{{ vault_mysql_database }}_dump.sql
  register: dump_exists_on_master
  delegate_to: mysql-master

- name: Загрузка дампа
  community.docker.docker_container_exec:
    container: "{{ master_mysql_container_name }}"
    command: |
      mysql -u root -p{{ vault_mysql_root_password }} {{ vault_mysql_database }} -e "source /tmp/mysql_dumps/{{ vault_mysql_database }}_dump.sql;"
  when: dump_exists_on_master.stat.exists
  register: load_dump_result
  changed_when: load_dump_result.rc == 0
  delegate_to: mysql-master

- name: Удаление дампа
  ansible.builtin.file:
    path: /tmp/mysql_dumps/{{ vault_mysql_database }}_dump.sql
    state: absent
  when: load_dump_result is changed
  delegate_to: mysql-master
