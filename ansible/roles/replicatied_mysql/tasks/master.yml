---
- name: Создание контейнера для мастера
  community.docker.docker_container:
    name: "{{ master_mysql_container_name }}"
    image: "{{ mysql_image }}"
    env:
      MYSQL_ROOT_PASSWORD: "{{ vault_mysql_root_password }}"
      MYSQL_DATABASE: "{{ vault_mysql_database }}"
      MYSQL_USER: "{{ vault_mysql_user }}"
      MYSQL_PASSWORD: "{{ vault_mysql_password }}"
      MYSQL_SERVER_ID: "1"
      MYSQL_LOG_BIN: mysql-bin
      MYSQL_BINLOG_FORMAT: ROW
    ports:
      - "3306:3306"
    volumes:
      - /tmp/mysql_dumps:/tmp/mysql_dumps
      - /opt/mysql/data:/var/lib/mysql
    restart_policy: always
    state: started

- name: Ожидание готовности MySQL
  ansible.builtin.wait_for:
    host: localhost
    port: 3306
    delay: 10
    timeout: 300

- name: Создание пользователя для репликации
  community.mysql.mysql_user:
    login_host: localhost
    login_user: root
    login_password: "{{ vault_mysql_root_password }}"
    name: "{{ vault_mysql_replication_user }}"
    password: "{{ vault_mysql_replication_password }}"
    priv: "*.*:REPLICATION SLAVE"
    state: present
    append_privs: true

- name: Проверка наличия дампа
  ansible.builtin.stat:
    path: /tmp/mysql_dumps/{{ vault_mysql_database }}_dump.sql
  register: dump_result
  delegate_to: localhost

- name: Получение информации о бинарных логах до импорта дампа
  community.mysql.mysql_replication:
    mode: getprimary
  register: master_binlog_info_before_dump
  when: dump_result.stat.exists

- name: Сохранение данных о бинарных логах в facts
  ansible.builtin.set_fact:
    binlog_info_for_slave:
      file: "{{ master_binlog_info_before_dump.binlog_file }}"
      position: "{{ master_binlog_info_before_dump.binlog_position }}"
  when: dump_result.stat.exists

- name: Копирование дампа на master
  ansible.builtin.copy:
    src: "/tmp/mysql_dumps/{{ vault_mysql_database }}_dump.sql"
    dest: "/tmp/mysql_dumps/{{ vault_mysql_database }}_dump.sql"
    mode: 0644
  delegate_to: localhost
  when: dump_result.stat.exists

- name: Восстановление базы данных из дампа
  community.mysql.mysql_db:
    login_host: localhost
    login_user: root
    login_password: "{{ vault_mysql_root_password }}"
    name: "{{ vault_mysql_database }}"
    state: import
    target: "/tmp/mysql_dumps/{{ vault_mysql_database }}_dump.sql"
  when: dump_result.stat.exists
  register: load_dump_result
  
- name: Удаление дампа
  ansible.builtin.file:
    path: /tmp/mysql_dumps/{{ vault_mysql_database }}_dump.sql
    state: absent
  when: load_dump_result is changed
  delegate_to: localhost
