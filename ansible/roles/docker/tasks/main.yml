---
- name: Обновление списка пакетов
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600

- name: Установка необходимых пакетов
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
      - python3-pip
    state: present

- name: Add GPG key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add docker repository to apt
  ansible.builtin.apt_repository:
    repo: "deb https://download.docker.com/linux/ubuntu {{ ubuntu_codename.stdout }} stable"
    state: present

- name: Обновление списка пакетов после добавления репозитория
  ansible.builtin.apt:
    update_cache: true

- name: Установка Docker Engine
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
    state: present
    update_cache: true

- name: Установка Python модуля для Docker
  ansible.builtin.pip:
    name: docker
    state: present

- name: Создание группы docker (если её нет)
    ansible.builtin.group:
      name: docker
      state: present
  
- name: Добавление пользователя в группу docker
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: docker
    append: true
    notify: Перезапуск SSH-соединения

- name: Установка прав доступа для сокета Docker
  ansible.builtin.file:
    path: /var/run/docker.sock
    owner: root
    group: docker
    mode: '0660'
    notify: Restart docker

- name: Запуск и включение сервиса Docker
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true

- name: Сбор фактов о сервисах
  ansible.builtin.service_facts:

- name: Проверка запуска
  ansible.builtin.debug:
    msg: "started"
  when: ansible_facts.services['docker.service'].state == "running"

- name: Создаем сеть докера
  community.docker.docker_network:
    name: "{{ docker_network }}"
    state: present
