---
- hosts: all
  become: true
  vars:

  tasks:

    - name: Generate MySQL password
      ansible.builtin.set_fact: mysql_passwd="{{ pwd_alias }}"

    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest
        update_cache: true

    - name: Автозапуск сервиса docker
      service:
        name: docker
        state: started
        enabled: yes

    - name: Create int docker network
      community.docker.docker_network:
        name: "{{ wp_int_network }}"
        internal: true
        ipam_config:
          - subnet:  10.16.1.0/28
            gateway: 10.16.1.1
            iprange: 10.16.1.0/29

    - name: Create WP docker network
      community.docker.docker_network:
        name: "{{ wp_ext_network }}"
#        ipam_config:
#          - subnet:  10.16.0.0/29
#            gateway: 10.16.0.1

    - name: Pull Docker MySQL image
      community.docker.docker_image:
        name: "{{ db_container_image }}"
        source: pull

    - name: Pull Docker Wordpress image
      community.docker.docker_image:
        name: "{{ wp_container_image }}"
        source: pull

    - name: Create MySQL container
      community.docker.docker_container:
        name: "{{ db_container_name }}"
        image: "{{ db_container_image }}"
        state: started
        restart: yes
        restart_policy: always
        networks:
          - name: "{{ wp_int_network }}"
            aliases: "{{ db_container_name }}"
            ipv4_address: "10.16.1.3"
        exposed_ports:
          - 3306
          - 33060
        volumes:
          - db:/var/lib/mysql
        env:
          MYSQL_ROOT_PASSWORD: "{{ mysql_root_pw }}"
#          MYSQL_RANDOM_ROOT_PASSWORD: '1'
          MYSQL_DATABASE: "{{ wp_dbname }}"
          MYSQL_USER: "{{ wp_dbuser }}"
          MYSQL_PASSWORD: "{{ mysql_passwd }}"

    - name: Create WP container
      community.docker.docker_container:
        name: "{{ wp_container_name }}"
        image: "{{ wp_container_image }}"
        state: started
        restart: yes
        restart_policy: always
        networks:
          - name: "{{ wp_int_network }}"
            aliases: wpint
            ipv4_address: "10.16.1.2"
          - name: "{{ wp_ext_network }}"
            aliases: wp
        ports:
          - "80:80"
        volumes:
          - wordpress:/var/www/html
        env:
          WORDPRESS_DB_HOST: "{{ db_container_name }}"
          WORDPRESS_DB_USER: "{{ wp_dbuser }}"
          WORDPRESS_DB_PASSWORD: "{{ mysql_passwd }}"
          WORDPRESS_DB_NAME: "{{ wp_dbname }}"
