- name: Configure MySQL Master in container
  when: inventory_hostname == "master"
  block:
    - name: Run MySQL Master container with replication configuration
      community.docker.docker_container:
        name: "{{ mysql_container_name }}"
        image: "{{ mysql_image }}"
        state: started
        restart_policy: always
        env:
          MYSQL_ROOT_PASSWORD: "{{ mysql_root_password }}"
        networks:
          - name: "{{ docker_network }}"
        volumes:
          - "{{ mysql_volume }}:/var/lib/mysql"
          - "{{ role_path }}/files/replication-master.cnf:/etc/mysql/conf.d/replication.cnf"

    - name: Create replication user on Master
      community.docker.docker_container_exec:
        container: "{{ mysql_container_name }}"
        command: >
          mysql -h127.0.0.1 -uroot -p{{ mysql_root_password }} -e "
          CREATE USER '{{ replication_user }}'@'%' IDENTIFIED BY '{{ replication_password }}';
          GRANT REPLICATION SLAVE ON *.* TO '{{ replication_user }}'@'%';
          FLUSH PRIVILEGES;"

- name: Configure MySQL Slave in container
  when: inventory_hostname == "slave"
  block:
    - name: Run MySQL Slave container with replication configuration
      community.docker.docker_container:
        name: "{{ mysql_slave_container_name }}"
        image: "{{ mysql_image }}"
        state: started
        restart_policy: always
        env:
          MYSQL_ROOT_PASSWORD: "{{ mysql_root_password }}"
        networks:
          - name: "{{ docker_network }}"
        volumes:
          - "{{ mysql_volume }}:/var/lib/mysql"
          - "{{ role_path }}/files/replication-slave.cnf:/etc/mysql/conf.d/replication.cnf"

    - name: Check if MySQL is running on Slave
      community.docker.docker_container_exec:
        container: "{{ mysql_slave_container_name }}"
        command: mysqladmin -h127.0.0.1 -uroot -p{{ mysql_root_password }} ping
      register: mysql_slave_status
      failed_when: "'mysqld is alive' not in mysql_slave_status.stdout"

    - name: Configure replication on Slave
      community.docker.docker_container_exec:
        container: "{{ mysql_slave_container_name }}"
        command: >
          mysql -h127.0.0.1 -uroot -p{{ mysql_root_password }} -e "
          CHANGE MASTER TO
          MASTER_HOST='{{ master_host }}',
          MASTER_USER='{{ replication_user }}',
          MASTER_PASSWORD='{{ replication_password }}',
          MASTER_LOG_FILE='{{ master_log_file }}',
          MASTER_LOG_POS={{ master_log_pos }};
          START SLAVE;"
