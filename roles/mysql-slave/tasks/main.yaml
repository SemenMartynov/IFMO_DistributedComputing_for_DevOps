---
- name: Stop slave IO thread if running
  mysql_replication:
    mode: stopreplica
    login_unix_socket: "{{ mysql_login_unix_socket }}"
  ignore_errors: true

- name: Configure slave replication
  mysql_replication:
    mode: changeprimary
    master_host: "{{ db_host }}"
    master_user: "{{ mysql_repl_user }}"
    master_password: "{{ mysql_repl_password }}"
    master_log_file: "{{ hostvars['beta'].master_log_file }}"
    master_log_pos: "{{ hostvars['beta'].master_log_pos }}"
    login_unix_socket: "{{ mysql_login_unix_socket }}"

- name: Start slave
  mysql_replication:
    mode: startreplica
    login_unix_socket: "{{ mysql_login_unix_socket }}"

- name: Restart MySQL
  service:
    name: mysql
    state: restarted
    enabled: true

- name: Check slave status
  mysql_replication:
    mode: getreplica
    login_unix_socket: "{{ mysql_login_unix_socket }}"
  register: slave_status
  failed_when: slave_status.Replica_IO_Running != 'Yes' or slave_status.Replica_SQL_Running != 'Yes'
  retries: 5
  delay: 3
  until: slave_status.Replica_IO_Running == 'Yes' and slave_status.Replica_SQL_Running == 'Yes'

- name: Print slave status
  debug:
    msg:
      - "Slave IO state: {{ slave_status.Replica_IO_State }}"
      - "IO running: {{ slave_status.Replica_IO_Running }}"
      - "SQL running: {{ slave_status.Replica_SQL_Running }}"
      - "Last IO error: {{ slave_status.Last_Error }}"
  when: slave_status is defined
