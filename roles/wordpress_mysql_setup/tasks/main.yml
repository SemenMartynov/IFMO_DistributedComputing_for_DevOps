---
- name: Установить PyMySQL для работы с MySQL
  ansible.builtin.apt:
    name: python3-pymysql
    state: present

- name: Создать конфигурационные файлы для MySQL
  ansible.builtin.template:
    src: mysql-cnf.j2
    dest: /home/{{ server_user }}/{{ item.name }}.cnf
    mode: '0644'
  loop:
    - { name: "master", server_id: 1, log_bin: "mysql-bin" }
    - { name: "slave", server_id: 2, log_bin: "relay-log" }

- name: Создать сеть Docker
  community.docker.docker_network:
    name: wp_net

- name: Создать Docker-тома
  community.docker.docker_volume:
    name: "{{ item }}"
  loop:
    - mysql_master_data
    - mysql_slave_data
    - wordpress_data

- name: Запустить mysql_master
  community.docker.docker_container:
    name: mysql_master
    image: "{{ wordpress_mysql_setup_mysql_image }}"
    restart_policy: always
    volumes:
      - mysql_master_data:/var/lib/mysql
      - "/home/{{ server_user }}/master.cnf:/etc/mysql/conf.d/master.cnf"
    networks:
      - name: wp_net
    env:
      MYSQL_ROOT_PASSWORD: "{{ wordpress_mysql_setup_mysql_root_password }}"
      MYSQL_DATABASE: "{{ wordpress_mysql_setup_mysql_database }}"
      MYSQL_USER: "{{ wordpress_mysql_setup_mysql_user }}"
      MYSQL_PASSWORD: "{{ wordpress_mysql_setup_mysql_password }}"
    recreate: false
    state: started
  register: mysql_master_container

- name: Запустить mysql_slave
  community.docker.docker_container:
    name: mysql_slave
    image: "{{ wordpress_mysql_setup_mysql_image }}"
    restart_policy: always
    volumes:
      - mysql_slave_data:/var/lib/mysql
      - "/home/{{ server_user }}/slave.cnf:/etc/mysql/conf.d/slave.cnf"
    networks:
      - name: wp_net
    env:
      MYSQL_ROOT_PASSWORD: "{{ wordpress_mysql_setup_mysql_root_password }}"
      MYSQL_DATABASE: "{{ wordpress_mysql_setup_mysql_database }}"
      MYSQL_USER: "{{ wordpress_mysql_setup_mysql_user }}"
      MYSQL_PASSWORD: "{{ wordpress_mysql_setup_mysql_password }}"
    recreate: false
    state: started
  register: mysql_slave_container

- name: Записать IP-адреса mysql_master и mysql_slave в переменные
  ansible.builtin.set_fact:
    mysql_master_ip: "{{ mysql_master_container.container.NetworkSettings.Networks.wp_net.IPAddress }}"
    mysql_slave_ip: "{{ mysql_slave_container.container.NetworkSettings.Networks.wp_net.IPAddress }}"

- name: Ждать, пока MySQL Master полностью запустится
  ansible.builtin.wait_for:
    host: "{{ mysql_master_ip }}"
    port: "{{ mysql_port }}"
    timeout: 180
    state: started

- name: Создать пользователя репликации
  community.mysql.mysql_user:
    name: "{{ wordpress_mysql_setup_mysql_replica_user }}"
    host: "%"
    password: "{{ wordpress_mysql_setup_mysql_replica_password }}"
    priv: "*.*:REPLICATION SLAVE"
    login_user: "{{ wordpress_mysql_setup_mysql_root_user }}"
    login_password: "{{ wordpress_mysql_setup_mysql_root_password }}"
    login_host: "{{ mysql_master_ip }}"
    state: present
    column_case_sensitive: false

- name: Получить статус мастера
  community.mysql.mysql_replication:
    mode: getprimary
    login_host: "{{ mysql_master_ip }}"
    login_port: "{{ mysql_port }}"
    login_user: "{{ wordpress_mysql_setup_mysql_root_user }}"
    login_password: "{{ wordpress_mysql_setup_mysql_root_password }}"
  register: master_status

- name: Ждать, пока MySQL Slave полностью запустится
  ansible.builtin.wait_for:
    host: "{{ mysql_slave_ip }}"
    port: "{{ mysql_port }}"
    timeout: 180
    state: started

- name: Остановить репликацию на mysql_slave
  community.mysql.mysql_replication:
    mode: stopreplica
    login_host: "{{ mysql_slave_ip }}"
    login_port: "{{ mysql_port }}"
    login_user: "{{ wordpress_mysql_setup_mysql_root_user }}"
    login_password: "{{ wordpress_mysql_setup_mysql_root_password }}"

- name: Настройка репликации на mysql_slave
  community.mysql.mysql_replication:
    mode: changereplication
    login_host: "{{ mysql_slave_ip }}"
    login_port: "{{ mysql_port }}"
    login_user: "{{ wordpress_mysql_setup_mysql_root_user }}"
    login_password: "{{ wordpress_mysql_setup_mysql_root_password }}"
    primary_host: "{{ mysql_master_ip }}"
    primary_log_file: "{{ master_status.File }}"
    primary_log_pos: "{{ master_status.Position }}"
    primary_user: "{{ wordpress_mysql_setup_mysql_replica_user }}"
    primary_password: "{{ wordpress_mysql_setup_mysql_replica_password }}"

- name: Запустить репликацию на mysql_slave
  community.mysql.mysql_replication:
    mode: startreplica
    login_host: "{{ mysql_slave_ip }}"
    login_port: "{{ mysql_port }}"
    login_user: "{{ wordpress_mysql_setup_mysql_root_user }}"
    login_password: "{{ wordpress_mysql_setup_mysql_root_password }}"

- name: Запустить WordPress контейнер
  community.docker.docker_container:
    name: wordpress
    image: "{{ wordpress_mysql_setup_wordpress_image }}"
    restart_policy: always
    ports:
      - "80:80"
    volumes:
      - wordpress_data:/var/www/html
    networks:
      - name: wp_net
    env:
      WORDPRESS_DB_HOST: "mysql_master:{{ mysql_port }}"
      WORDPRESS_DB_USER: "{{ wordpress_mysql_setup_mysql_user }}"
      WORDPRESS_DB_PASSWORD: "{{ wordpress_mysql_setup_mysql_password }}"
      WORDPRESS_DB_NAME: "{{ wordpress_mysql_setup_mysql_database }}"
    state: started
