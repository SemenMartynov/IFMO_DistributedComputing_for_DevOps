---
- name: Add Docker GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  when: ansible_facts['os_family'] == "Debian"

- name: Add Docker repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_facts['lsb']['codename'] }} stable"
    state: present
    update_cache: true
  when: ansible_facts['os_family'] == "Debian"

- name: Install Docker on Debian-based systems
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: true
  when: ansible_facts['os_family'] == "Debian"

- name: Install dependencies (RHEL family)
  dnf:
    name:
      - dnf-plugins-core
      - curl
      - python3-pip
    state: present
    update_cache: true
  when: ansible_facts['os_family'] == "RedHat"

- name: Add Docker YUM repository
  get_url:
    url: https://download.docker.com/linux/centos/docker-ce.repo
    dest: /etc/yum.repos.d/docker-ce.repo
    mode: '0644'
  when: ansible_facts['os_family'] == "RedHat"

- name: Install Docker on RHEL-based systems
  dnf:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose-plugin
    state: present
    update_cache: true
  when: ansible_facts['os_family'] == "RedHat"

- name: Ensure Docker service is started and enabled
  service:
    name: docker
    state: started
    enabled: true

- name: Add user to docker group
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: true

- name: Restart Docker service
  systemd:
    name: docker
    state: restarted