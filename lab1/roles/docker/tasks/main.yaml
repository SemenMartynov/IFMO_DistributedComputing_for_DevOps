---

- name: Set DPKG architecture
  set_fact:
    dpkg_arch: "{{ 'amd64' if ansible_architecture == 'x86_64' else ansible_architecture }}"

- name: Use the variable
  ansible.builtin.debug:
    msg: "The system architecture is {{ dpkg_arch }}"

- name: Ensure Docker's repository is added
  block:
    - name: Add Docker's official GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc

    - name: Add Docker's repository
      ansible.builtin.apt_repository:
        repo: "deb [arch={{ dpkg_arch }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

- name: Update repositories
  ansible.builtin.apt:
    update_cache: yes

- name: Install Docker
  ansible.builtin.apt:
    name: "{{ item }}"
    state: latest
  loop:
    - docker-ce 
    - docker-ce-cli
    - containerd.io

- name: Ensure Docker is running and enabled
  ansible.builtin.service:
    name: docker
    state: started
    enabled: yes

- name: Pull Docker images
  community.docker.docker_image:
    name: "{{ item }}"
    tag: latest
    source: pull
  loop:
    - bitnami/mariadb-galera
    - wordpress

- name: Create a Docker network for WordPress and MariaDB
  community.docker.docker_network:
    name: "{{ item }}"
    driver: bridge
  loop:
    - wp_network