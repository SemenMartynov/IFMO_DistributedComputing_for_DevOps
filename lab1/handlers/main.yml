#SPDX-License-Identifier: MIT-0
---
# handlers file for lab1

#Restart main docker-compose
- name: Remove containers main
  community.docker.docker_compose_v2:
    project_src: "/data"
    state: absent
    files:
      - docker-compose.yml
  environment:
    - MARIADB_ROOT_PASSWORD: "{{db_root_password}}"
    - WORDPRESS_DB_USER: "{{db_wordpress_user}}"
    - MARIADB_USER: "{{db_wordpress_user}}"
    - WORDPRESS_DB_PASSWORD: "{{db_wordpress_password}}"
    - MARIADB_PASSWORD: "{{db_wordpress_password}}"
    - WORDPRESS_DB_NAME: "{{wordpress_database}}"
    - MARIADB_DATABASE: "{{wordpress_database}}"
    - VOL_NGINX_WWW: "{{vol_nginx_www}}"
    - VOL_NGINX_CONF: "{{vol_nginx_conf}}"
    - VOL_DB_DATA: "{{vol_db_data}}"
    - VOL_DB_CONF: "{{vol_db_conf}}"
  listen: "restart docker-compose"
  register: docker_compose_removed

- name: Run docker compose main
  community.docker.docker_compose_v2:
    project_src: "/data"
    files:
      - docker-compose.yml
    remove_volumes: true
  environment:
    - MARIADB_ROOT_PASSWORD: "{{db_root_password}}"
    - WORDPRESS_DB_USER: "{{db_wordpress_user}}"
    - MARIADB_USER: "{{db_wordpress_user}}"
    - WORDPRESS_DB_PASSWORD: "{{db_wordpress_password}}"
    - MARIADB_PASSWORD: "{{db_wordpress_password}}"
    - WORDPRESS_DB_NAME: "{{wordpress_database}}"
    - MARIADB_DATABASE: "{{wordpress_database}}"
    - VOL_NGINX_WWW: "{{vol_nginx_www}}"
    - VOL_NGINX_CONF: "{{vol_nginx_conf}}"
    - VOL_DB_DATA: "{{vol_db_data}}"
    - VOL_DB_CONF: "{{vol_db_conf}}"
  listen: "restart docker-compose"
  register: docker_compose_started

#Restart slave SQL docker-compose
- name: Remove containers slave sql
  community.docker.docker_compose_v2:
    project_src: "/data"
    project_name: db_slave_project
    state: absent
    files:
      - docker-compose-slave-sql.yml
  environment:
    - MARIADB_ROOT_PASSWORD: "{{db_root_password}}"
    - MARIADB_DATABASE: "{{wordpress_database}}"
    - MARIADB_USER: "{{db_wordpress_user}}"
    - MARIADB_PASSWORD: "{{db_wordpress_password}}"
    - VOL_DB_DATA_SLAVE: "{{vol_db_data_slave}}"
    - VOL_DB_CONF_SLAVE: "{{vol_db_conf_slave}}"
  listen: "restart docker-compose-slave-sql"

- name: Run docker compose slave sql
  community.docker.docker_compose_v2:
    project_src: "/data"
    project_name: db_slave_project
    files:
      - docker-compose-slave-sql.yml
    remove_volumes: true
  environment:
    - MARIADB_ROOT_PASSWORD: "{{db_root_password}}"
    - MARIADB_DATABASE: "{{wordpress_database}}"
    - MARIADB_USER: "{{db_wordpress_user}}"
    - MARIADB_PASSWORD: "{{db_wordpress_password}}"
    - VOL_DB_DATA_SLAVE: "{{vol_db_data_slave}}"
    - VOL_DB_CONF_SLAVE: "{{vol_db_conf_slave}}"
  listen: "restart docker-compose-slave-sql"

#1 Проверка контейнера Nginx
- name: Start nginx validation
  listen: "restart nginx"
  shell: docker-compose -f /data/docker-compose.yml ps -q nginx
  args:
    chdir: /data
  register: nginx_container_check
  changed_when: false
  failed_when: false
  notify: check nginx config

#2 Проверка конфигурации Nginx
- name: Check nginx config
  listen: "check nginx config"
  shell: docker-compose -f /data/docker-compose.yml exec -T nginx nginx -t
  args:
    chdir: /data
  register: nginx_config_check
  changed_when: false
  failed_when: false
  when:
    - nginx_container_check.rc == 0
    - nginx_container_check.stdout | trim != ""

  # В случае ошибки уведомляем handler-обработчик
  notify:
    - process nginx errors
    - restart nginx container

#3 Рестарт Nginx в случае успеха всех проверок
- name: Restart nginx container
  listen: "restart nginx container"
  community.docker.docker_compose_v2:
    project_src: "/data"
    services: nginx
    restarted: true
  when:
    - nginx_config_check is defined
    - nginx_config_check.rc == 0

#4 Обработка ошибок Nginx
- name: Process nginx errors
  listen: "process nginx errors"
  debug:
    msg: >-
      Ошибка при проверке конфигурации Nginx:
      {% if nginx_config_check is defined and nginx_config_check.rc != 0 %}
        Конфигурация невалидна: {{ nginx_config_check.stderr }}
      {% else %}
        Неизвестная ошибка.
      {% endif %}
  when:
    - nginx_config_check is defined
    - nginx_config_check.rc != 0

