#SPDX-License-Identifier: MIT-0
---
- name: Install packages
  ansible.builtin.apt:
    pkg:
      - python3-pip

- name: Create a lab directory if it does not exist
  ansible.builtin.file:
    path: ~/lab3
    state: directory
    mode: '0755'

- name: Create a grafana directory if it does not exist
  ansible.builtin.file:
    path: ~/lab3/grafana
    state: directory
    mode: '0755'

- name: Create a grafana directory if it does not exist
  ansible.builtin.file:
    path: ~/lab3/grafana/dashboards
    state: directory
    mode: '0755'

- name: Create a prom directory if it does not exist
  ansible.builtin.file:
    path: ~/lab3/prometheus/
    state: directory
    mode: '0755'

- name: copy prom.yml template
  ansible.builtin.template:
    src: prometheus.yml.j2
    dest: ~/lab3/prometheus/prometheus.yml

- name: copy docker compose template
  ansible.builtin.template:
    src: docker-compose.yaml.j2
    dest: ~/lab3/docker-compose.yaml

- name: copy dashboad config
  ansible.builtin.copy:
    src: dashboard.yaml
    dest: ~/lab3/grafana/

- name: copy mysql dashboad
  ansible.builtin.copy:
    src: mysql-dashboard.json
    dest: ~/lab3/grafana/dashboards/

- name: install grafana with prometheus
  community.docker.docker_compose_v2:
    project_src: ~/lab3/
    state: present

- name: Waits for port 3000
  ansible.builtin.wait_for:
    host: 0.0.0.0
    port: 3000
    delay: 10
    state: started


- name: Create a source
  ansible.builtin.uri:
    url: http://localhost:3000/api/datasources
    user: admin
    password: "{{ grafana_admin_pass }}"
    method: POST
    body: "{{ lookup('ansible.builtin.file','source.json') }}"
    force_basic_auth: true
    status_code: 200
    body_format: json