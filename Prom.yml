- name: Развертывание WordPress с Docker + Prometheus
  hosts: all
  become: true
  vars:
    # mysql_root_password: "my_root_password"
    prometheus_volume: "prometheus_data"
    prometheus_config_dir: "/opt/prometheus"
    docker_network: "wp_network"

  tasks:
    - name: Создаю volume для Prometheus
      community.docker.docker_volume:
        name: "{{ prometheus_volume }}"
        state: present

    - name: Создаю volume для graf
      community.docker.docker_volume:
        name: "grafana_data"
        state: present

    - name: Создаю директорию для конфига Prometheus
      ansible.builtin.file:
        path: "{{ prometheus_config_dir }}"
        state: directory
        mode: '0755'

    - name: Копирую конфиг Prometheus
      ansible.builtin.template:
        src: "{{ playbook_dir }}/templates/prometheus.yml.j2"
        dest: "{{ prometheus_config_dir }}/prometheus.yml"
        mode: '0644'

    - name: Запускаю Prometheus
      community.docker.docker_container:
        name: prometheus
        image: prom/prometheus:latest
        state: started
        restart_policy: unless-stopped
        networks:
          - name: "{{ docker_network }}"
        published_ports:
          - "9090:9090"
        volumes:
          - "{{ prometheus_volume }}:/prometheus"
          - "{{ prometheus_config_dir }}/prometheus.yml:/etc/prometheus/prometheus.yml"

# Для сбора системных метрик
    - name: Запускаю Node Exporter
      community.docker.docker_container:
        name: node_exporter
        image: prom/node-exporter:latest
        state: started
        restart_policy: unless-stopped
        networks:
          - name: "{{ docker_network }}"
        published_ports:
          - "9100:9100"
        command: --path.rootfs=/host
        volumes:
          - "/:/host:ro,rslave"


    - name: Запускаю cAdvisor
      community.docker.docker_container:
        name: cadvisor
        image: gcr.io/cadvisor/cadvisor:latest
        state: started
        restart_policy: unless-stopped
        networks:
          - name: "{{ docker_network }}"
        published_ports:
          - "8080:8080"
        volumes:
          - "/:/rootfs:ro"
          - "/var/run:/var/run:rw"
          - "/sys:/sys:ro"
          - "/var/lib/docker/:/var/lib/docker:ro"

    - name: Проверка работы Prometheus
      ansible.builtin.wait_for:
        host: localhost
        port: 9090
        delay: 10
        timeout: 60
        state: started

    - name: Запускаю Grafana
      community.docker.docker_container:
        name: grafana
        image: grafana/grafana:latest
        state: started
        restart_policy: unless-stopped
        networks:
          - name: "{{ docker_network }}"
        published_ports:
          - "3000:3000"
        volumes:
          - "grafana_data:/var/lib/grafana"

    - name: Проверка работы Grafana
      ansible.builtin.wait_for:
        host: localhost
        port: 3000
        delay: 10
        timeout: 60
        state: started

    - name: Set monitoring URL
      ansible.builtin.set_fact:
        monitoring_url: "http://{{ ansible_host }}:3000"

    - name: Вывожу информацию об адресе grafana
      ansible.builtin.debug:
        msg:
          - "monitoring_url: {{ monitoring_url }}"
