- name: Развернуть WordPress с MySQL
  hosts: web
  become: true
  vars:
    mysql_image: mysql:8.3
    wordpress_image: wordpress:latest
    env_path: /home/user/.env
  tasks:
    - name: Скопировать .env на сервер
      ansible.builtin.copy:
        src: .env
        dest: "{{ env_path }}"
        mode: '0600'

    - name: Скопировать конфиги MySQL
      loop:
        - master.cnf
        - slave.cnf
        - init-master.sh
        - init-slave.sh
      copy:
        src: "{{ item }}"
        dest: "/home/user/{{ item }}"
        mode: '0644'

    - name: Установить зависимости
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes

    - name: Добавить официальный GPG ключ Docker
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Добавить Docker репозиторий
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        filename: docker

    - name: Установить Docker и Docker Compose CLI
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest
        update_cache: yes

    - name: Убедиться, что Docker запущен и включен
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: yes

    - name: Добавить пользователя в группу Docker
      ansible.builtin.user:
        name: "{{ ansible_user | default('user') }}"
        groups: docker
        append: yes

    - name: Проверить версию Docker Compose
      ansible.builtin.command: docker compose version
      register: compose_version
      changed_when: false

    - name: Показать установленную версию Docker Compose
      ansible.builtin.debug:
        msg: "Docker Compose версия: {{ compose_version.stdout }}"

    - name: Перезапустить Docker
      ansible.builtin.systemd:
        name: docker
        state: restarted

    - name: Создать сеть Docker
      community.docker.docker_network:
        name: wp_net

    - name: Создать Docker-тома
      community.docker.docker_volume:
        name: "{{ item }}"
      loop:
        - mysql_master_data
        - mysql_slave_data
        - wordpress_data

    - name: Запустить контейнер MySQL Master
      community.docker.docker_container:
        name: mysql_master
        image: "{{ mysql_image }}"
        env_file: "{{ env_path }}"
        restart_policy: always
        volumes:
          - mysql_master_data:/var/lib/mysql
          - /home/user/master.cnf:/etc/mysql/conf.d/master.cnf
          - /home/user/init-master.sh:/docker-entrypoint-initdb.d/init-master.sh
        networks:
          - name: wp_net
        expose:
          - 3306

    - name: Запустить контейнер MySQL Slave
      community.docker.docker_container:
        name: mysql_slave
        image: "{{ mysql_image }}"
        env_file: "{{ env_path }}"
        restart_policy: always
        volumes:
          - mysql_slave_data:/var/lib/mysql
          - /home/user/slave.cnf:/etc/mysql/conf.d/slave.cnf
          - /home/user/init-slave.sh:/docker-entrypoint-initdb.d/init-slave.sh
        networks:
          - name: wp_net
        expose:
          - 3306

    - name: Запустить WordPress контейнер
      community.docker.docker_container:
        name: wordpress
        image: "{{ wordpress_image }}"
        restart_policy: always
        env_file: "{{ env_path }}"
        ports:
          - "80:80"
        volumes:
          - wordpress_data:/var/www/html
        networks:
          - name: wp_net
