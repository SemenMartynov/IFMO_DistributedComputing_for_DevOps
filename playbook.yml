---
- name:  wordpress splitted to containers (web + db)
  hosts: all
  become: true

  tasks:
    - name: Print detected OS
      debug:
        msg: "Detected OS: {{ ansible_facts['distribution'] }} {{ ansible_facts['distribution_version'] }}"

    - name: Install dependencies on Ubuntu
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
        state: present
        update_cache: yes
      when: ansible_facts['os_family'] == "Ubuntu"

    - name: Install dependencies on RHEL-like
      dnf:
        name:
          - dnf-plugins-core
          - curl
          - python3-pip
        state: present
        update_cache: yes
      when: ansible_facts['os_family'] == "RedHat"

    - name: install pymysql for ansible mariadb modules
      pip:
        name: PyMySQL
      delegate_to: localhost
      become: false

    - name: add docker gpg key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: add docker repo ubuntu
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: docker and docker compose installation
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present
        update_cache: yes

    - name: checking status for docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: project dir creation
      file:
        path: /opt/wordpress
        state: directory

    - name: copy docker-compose.yml
      copy:
        src: docker-compose.yml
        dest: /opt/wordpress/docker-compose.yml

    - name: copy .env file
      copy:
        src: .env
        dest: /opt/wordpress/.env

    - name: Stop and remove containers
      community.docker.docker_compose_v2:
        project_src: /opt/wordpress
        state: absent

    - name: run docker compose (v2)
      community.docker.docker_compose_v2:
        project_src: /opt/wordpress
        state: present

    - name: Wait for db-master to become healthy
      community.docker.docker_container_info:
        name: db-master
      register: master_info
      until: master_info.container.State.Health is defined and master_info.container.State.Health.Status == "healthy"
      retries: 15
      delay: 5

    - name: Wait for db-slave to become healthy
      community.docker.docker_container_info:
        name: db-slave
      register: slave_info
      until: slave_info.container.State.Health is defined and slave_info.container.State.Health.Status == "healthy"
      retries: 15
      delay: 5

    - name: Verify Galera cluster size
      shell: >
        docker exec db-master /opt/bitnami/mariadb/bin/mariadb -uroot -psupersecure \
        -e "SHOW STATUS LIKE 'wsrep_cluster_size';"
      register: galera_status
      retries: 10
      delay: 6
      until: galera_status.rc == 0
      ignore_errors: false

    - name: Verify wsrep_ready on db-master
      shell: >
        docker exec db-master /opt/bitnami/mariadb/bin/mariadb -uroot -psupersecure \
        -e "SHOW STATUS LIKE 'wsrep_ready';"
      register: wsrep_ready
      retries: 10
      delay: 5
      until: wsrep_ready.stdout is search('ON')
      ignore_errors: false
