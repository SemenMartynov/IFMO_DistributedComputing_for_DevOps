#!/bin/bash

# Функция проверки работы контейнера
check_container_running() {
  if ! docker ps | grep -q $1; then
    echo "Контейнер $1 не запущен!"
    exit 1
  fi
}

# Проверка состояния контейнеров
check_container_running {{ db_master }}
check_container_running {{ db_replica }}

# Ожидание полной инициализации MySQL
echo "Ожидание инициализации баз данных..."
sleep 30

# Проверка доступности MySQL в контейнерах
until docker exec {{ db_master }} mysqladmin ping -u root -p{{ db_pass }} --silent; do
  echo "Ожидание готовности Master MySQL..."
  sleep 5
done

until docker exec {{ db_replica }} mysqladmin ping -u root -p{{ db_pass }} --silent; do
  echo "Ожидание готовности Replica MySQL..."
  sleep 5
done

echo "Базы данных готовы, настраиваем репликацию..."

# Далее код настройки репликации...
# Создание пользователя для репликации на Master
docker exec {{ db_master }} mysql -uroot -p{{ db_pass }} -e "
CREATE USER '{{ mysql_replication_user }}'@'%' IDENTIFIED BY '{{ mysql_replication_password }}';
GRANT REPLICATION SLAVE ON *.* TO '{{ mysql_replication_user }}'@'%';
FLUSH PRIVILEGES;
"

# Получение информации о логе репликации
MASTER_STATUS=$(docker exec {{ db_master }} mysql -uroot -p{{ db_pass }} -e "SHOW MASTER STATUS\G")
CURRENT_LOG=$(echo "$MASTER_STATUS" | grep File | awk '{print $2}')
CURRENT_POS=$(echo "$MASTER_STATUS" | grep Position | awk '{print $2}')

echo "Master log file: $CURRENT_LOG, Position: $CURRENT_POS"

# Настройка репликации на Slave
docker exec {{ db_replica }} mysql -uroot -p{{ db_pass }} -e "
STOP SLAVE;
CHANGE MASTER TO
  MASTER_HOST='{{ db_master }}',
  MASTER_USER='{{ mysql_replication_user }}',
  MASTER_PASSWORD='{{ mysql_replication_password }}',
  MASTER_LOG_FILE='$CURRENT_LOG',
  MASTER_LOG_POS=$CURRENT_POS;
START SLAVE;
"

# Проверка статуса репликации
sleep 5
docker exec {{ db_replica }} mysql -uroot -p{{ db_pass }} -e "SHOW SLAVE STATUS\G"
