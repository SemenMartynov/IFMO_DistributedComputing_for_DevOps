---
# MySQL InnoDB Cluster
# https://dev.mysql.com/doc/mysql-shell/8.4/en/mysql-innodb-cluster.html
- hosts: all
  become: true
  vars:
    db_container_name: db
    db_container_image: mysql:lts
    wp_container_name: wp
    wp_container_image: wordpress
    wp_dbname: wp_dbname
    wp_dbuser: wp_dbuser
    wp_int_network: wp_int_network
    wp_ext_network: wp_ext_network
    pwd_alias: "{{ lookup('password', '/dev/null length=15 chars=ascii_letters') }}"
    mysql_root_pw: "MySQL s3cret pas3w0rd"

  tasks:
    - name: Generate MySQL password
      ansible.builtin.set_fact: mysql_passwd="{{ pwd_alias }}"

    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true
        
    - name: Install required by Ansible package
      apt: pkg={{ item }} state=present
      with_items:
        - python3-pymysql
        
    - name: Create MySQL container for SLAVE
      community.docker.docker_container:
        name: "{{ db_container_name }}slave"
        image: "{{ db_container_image }}"
        state: started
        restart: yes
        restart_policy: always
        networks:
          - name: "{{ wp_int_network }}"
            ipv4_address: "10.16.1.4"
        exposed_ports:
          - 3306
          - 33060
        volumes:
          - db2:/var/lib/mysql
        env:
          MYSQL_ROOT_PASSWORD: "{{ mysql_root_pw }}"
#          MYSQL_RANDOM_ROOT_PASSWORD: '1'
          MYSQL_DATABASE: "{{ wp_dbname }}"
          MYSQL_USER: "{{ wp_dbuser }}"
          MYSQL_PASSWORD: "{{ mysql_passwd }}"

#    - name: Set mysql_server_id on SLAVE
#      community.mysql.mysql_variables:
#        variable: mysql_server_id
#        value: 2
#        mode: persist

    - name: Start MySQL SLAVE container
      community.docker.docker_container:
        name: "{{ db_container_name }}slave"
        state: started
        
    - name: Stop WP container
      community.docker.docker_container:
        name: "{{ wp_container_name }}"
        state: stopped

    - name: Backup current WP databases
      mysql_db:
        state: dump
        name: all
        target: /tmp/dump.sql
        login_host: "10.16.1.3"
        login_port: 3306
        login_password: "{{ mysql_root_pw }}"

    - name: Install CLONE plugin and create replication user on MASTER
      community.mysql.mysql_query:
        login_db: mysql
        login_host: "10.16.1.3"
        login_port: 3306
        login_password: "{{ mysql_root_pw }}"
        query:
          - INSTALL PLUGIN clone SONAME 'mysql_clone.so'
          - CREATE USER 'replica_user'@'%' IDENTIFIED BY '{{ mysql_root_pw }}'
          - GRANT BACKUP_ADMIN, CLONE_ADMIN, REPLICATION SLAVE ON *.* TO 'replica_user'@'%'
          - FLUSH PRIVILEGES 

    - name: Install CLONE plugin and create replication user on SLAVE
      community.mysql.mysql_query:
        login_db: mysql
        login_host: "10.16.1.4"
        login_port: 3306
        login_password: "{{ mysql_root_pw }}"
        query:
          - INSTALL PLUGIN clone SONAME 'mysql_clone.so'
          - SET GLOBAL clone_valid_donor_list = '10.16.1.3:3306'
          - CLONE INSTANCE FROM 'replica_user'@'10.16.1.3':3306 IDENTIFIED BY '{{ mysql_root_pw }}'
