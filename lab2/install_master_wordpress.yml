---
# Ansible playbook для установки WordPress на master-узле с Docker Compose
# Использовать данный плейбук для установки Master mysql реплики 
- name: Развертывание WordPress в Docker-контейнерах на Ubuntu
  hosts: mysql_master  # Мастер-узел MySQL
  become: yes  # Выполнять задачи от имени root (sudo)
  vars:
    mysql_root_password: rootpassword
    mysql_user: wp_user
    mysql_password: wp_password
    mysql_database: wordpress
    replication_user: replication
    replication_password: replication_password
    docker_compose_dir: /opt/wordpress-master  # Директория установки WordPress

  tasks:
    # Обновление системы и установка базовых зависимостей
    - name: Обновление кэша APT и установка необходимых пакетов
      apt:
        update_cache: yes
        name:
          - apt-transport-https
          - software-properties-common
        state: present
    
    - name: Установка Python модуля для Docker
      pip:
        name: docker
        state: present

    # Создание директории для WordPress
    - name: Создание директории для WordPress (docker compose)
      file:
        path: "{{ docker_compose_dir }}"
        state: directory
        mode: "0755"
    
    - name: Копирование mysql-master.cnf
      template:
        src: "files/mysql-master.cnf"
        dest: "{{ docker_compose_dir }}/mysql-master.cnf"
        mode: '0644'

    - name: Копирование nginx.conf
      template:
        src: "templates/nginx.conf"
        dest: "{{ docker_compose_dir }}/nginx.conf"
        mode: "0744"


    # Копирование docker-compose.yml
    - name: Копирование docker-compose-master.yml
      template:
        src: "templates/docker-compose-master.yml"
        dest: "{{ docker_compose_dir }}/docker-compose-master.yml"
        mode: "0744"

    # Запуск контейнеров через Docker Compose
    - name: Запуск Docker Compose
      shell: "docker compose -f {{ docker_compose_dir }}/docker-compose-master.yml up -d" # убрал sudo 
      args:
        chdir: "{{ docker_compose_dir }}"
    
    # Ожидание доступности MySQL
    - name: Проверка доступности MySQL
      wait_for:
        port: 3306
        delay: 10
        timeout: 300

    # Проверка статуса контейнеров
    - name: Проверка запущенных контейнеров
      command: "docker ps"
      register: docker_ps
      changed_when: false

    - name: Вывод статуса контейнеров
      debug:
        msg: "{{ docker_ps.stdout_lines }}"
        

# Создание replication user и получение master status

    - name: Создание replication user
      shell: >
        docker exec mysql_master mysql -u root -p{{ mysql_root_password }} -e 
        "CREATE USER '{{ replication_user }}'@'%' IDENTIFIED BY '{{ replication_password }}'; 
        GRANT REPLICATION SLAVE ON *.* TO '{{ replication_user }}'@'%'; 
        FLUSH PRIVILEGES;"
      args:
        executable: /bin/bash
      register: replication_user_result
      changed_when: replication_user_result.rc == 0
      failed_when: replication_user_result.rc != 0 and "ERROR 1396" not in replication_user_result.stderr
    
    # Проверка master status
    - name: Получение master status
      shell: docker exec mysql_master mysql -u root -p{{ mysql_root_password }} -e "SHOW MASTER STATUS\G"
      register: master_status
      changed_when: false

    - name: Показать статус мастера
      debug:
        var: master_status.stdout_lines

    - name: Сохранение информации о мастере
      set_fact:
        master_log_file: "{{ master_status.stdout | regex_search('File:\\s+(\\S+)', '\\1') | first }}"
        master_log_pos: "{{ master_status.stdout | regex_search('Position:\\s+(\\d+)', '\\1') | first }}"

    - name: Сохранение информации о мастере в файл
      copy:
        dest: "{{ docker_compose_dir }}/master_info.txt"
        content: |
          MASTER_HOST={{ ansible_host }}
          MASTER_USER={{ replication_user }}
          MASTER_PASSWORD={{ replication_password }}
          MASTER_LOG_FILE={{ master_log_file }}
          MASTER_LOG_POS={{ master_log_pos }}
        mode: '0644'

    - name: Вывод информации о мастере
      debug:
        msg: 
          - "Master host: {{ ansible_host }}"
          - "Master log file: {{ master_log_file }}"
          - "Master log position: {{ master_log_pos }}"